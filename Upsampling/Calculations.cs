using System;

namespace JH.Applications
{
    public partial class Upsampling : FunctionBlock, IObservable<DataObject>, IObserver<DataObject>
    {
        public class Calculations
        {
            int upFactor;
            int downFactor;
            int subFilterLength;
            double[] coefficients;
            double[] delayLine;
            double[] initialData;
            double[] output;

            public Calculations(int upFactor, int downFactor)
            {
                this.upFactor = upFactor;
                this.downFactor = downFactor;
                coefficients = Coefficients();
                subFilterLength = coefficients.Length / upFactor;
                delayLine = new double[subFilterLength];
                initialData = new double[2 * delayLine.Length];
            }

            public void Calculate(double[] input)
            {

                for (int i = 0; i < delayLine.Length; i++)
                {
                    initialData[i] = delayLine[i];
                    initialData[i + delayLine.Length] = input[i];
                }

                double[] data = initialData;

                bool first = true;

                int m = 0;
                int n = 0;
                int k = 0;
                do
                {
                    if (first && k >= delayLine.Length)
                    {
                        data = input;
                        k -= delayLine.Length;
                        first = false;
                    }

                    double sum = 0;
                    int offset = 0;
                    for (int j = 0; j < delayLine.Length; j++)
                    {
                        sum += coefficients[offset + n] * data[k + j];
                        offset += upFactor;
                    }
                    output[m] = sum;

                    m++;
                    k++;
                    n += upFactor - downFactor;
                    if (n >= upFactor)
                    {
                        n -= upFactor;
                        k--;
                    }
                } while (m < output.Length);

                for (int i = 0; i < delayLine.Length; i++)
                    delayLine[i] = input[i + input.Length - delayLine.Length];


            }

            public void Reset()
            {
                for (int i = 0; i < delayLine.Length; i++)
                    delayLine[i] = 0;

            }
            public void Allocate(int outputLength, DataObjectElement[] outputData)
            {
                output = new double[outputLength];
                outputData[0].data = output;

            }
            double[] Coefficients()
            {
                return new double[]{
-0.000599909216,
-0.000468666800,
-0.000636015984,
-0.000828864112,
-0.001045305200,
-0.001281779408,
-0.001533361184,
-0.001793277264,
-0.002053472128,
-0.002304417440,
-0.002535831248,
-0.002736352320,
-0.002894192512,
-0.002996997568,
-0.003033051504,
-0.002991490048,
-0.002863394768,
-0.002641260272,
-0.002320182016,
-0.001898028992,
-0.001377066368,
-0.000762428896,
-0.000063119472,
0.000707853792,
0.001531527392,
0.002388944496,
0.003254433680,
0.004101247216,
0.004900782288,
0.005622425584,
0.006236757504,
0.006714467056,
0.007029282848,
0.007157811424,
0.007081890336,
0.006788721920,
0.006272547168,
0.005534745888,
0.004585156336,
0.003441799808,
0.002131168000,
0.000687521680,
-0.000847201088,
-0.002424748240,
-0.003991918928,
-0.005492184848,
-0.006867072896,
-0.008058781072,
-0.009012445360,
-0.009677596880,
-0.010011308288,
-0.009979979776,
-0.009560657344,
-0.008743996464,
-0.007533881248,
-0.005949685968,
-0.004025311568,
-0.001809954832,
0.000633583296,
0.003229740848,
0.005892773808,
0.008528668912,
0.011038726960,
0.013322566848,
0.015282136112,
0.016825053792,
0.017868927648,
0.018344747232,
0.018200482064,
0.017403751568,
0.015944740400,
0.013837402032,
0.011120649024,
0.007858335472,
0.004138348800,
0.000070424304,
-0.004215921792,
-0.008576149600,
-0.012854131840,
-0.016888308128,
-0.020516558112,
-0.023582870624,
-0.025943090768,
-0.027471279664,
-0.028065070768,
-0.027651185968,
-0.026189478384,
-0.023676482032,
-0.020147296800,
-0.015676722320,
-0.010378344832,
-0.004402642432,
0.002066795264,
0.008818016176,
0.015617428128,
0.022216880912,
0.028362380048,
0.033803017232,
0.038300595968,
0.041638732336,
0.043632610944,
0.044136781392,
0.043053289264,
0.040337174544,
0.036001401200,
0.030119153408,
0.022824434864,
0.014310238400,
0.004824720752,
-0.005335164672,
-0.015831847648,
-0.026297474784,
-0.036345604480,
-0.045584522112,
-0.053631054624,
-0.060125116448,
-0.064743874784,
-0.067215653648,
-0.067332183552,
-0.064959828560,
-0.060048168928,
-0.052636426528,
-0.042856663040,
-0.030934366880,
-0.017185016768,
-0.002008128960,
0.014122828096,
0.030672862432,
0.047061257728,
0.062679528144,
0.076911286464,
0.089153475696,
0.098838279760,
0.105454849056,
0.108570384912,
0.107849524624,
0.103071662816,
0.094145082720,
0.081117852848,
0.064184426176,
0.043688068352,
0.020118256272,
-0.005896238432,
-0.033599543440,
-0.062125026032,
-0.090516178944,
-0.117750876656,
-0.142769169968,
-0.164502897312,
-0.181907332080,
-0.193992874032,
-0.199856783136,
-0.198713295776,
-0.189921401392,
-0.173009526400,
-0.147695975648,
-0.113904562720,
-0.071774945184,
-0.021666901728,
0.035841319600,
0.099961141648,
0.169707629296,
0.243919618192,
0.321284949168,
0.400370746544,
0.479657242960,
0.557575120592,
0.632544395856,
0.703014569584,
0.767504236096,
0.824639654096,
0.873190454976,
0.912102197872,
0.940524095088,
0.957831760560,
0.963643756848,
0.957831760560,
0.940524095088,
0.912102197872,
0.873190454976,
0.824639654096,
0.767504236096,
0.703014569584,
0.632544395856,
0.557575120592,
0.479657242960,
0.400370746544,
0.321284949168,
0.243919618192,
0.169707629296,
0.099961141648,
0.035841319600,
-0.021666901728,
-0.071774945184,
-0.113904562720,
-0.147695975648,
-0.173009526400,
-0.189921401392,
-0.198713295776,
-0.199856783136,
-0.193992874032,
-0.181907332080,
-0.164502897312,
-0.142769169968,
-0.117750876656,
-0.090516178944,
-0.062125026032,
-0.033599543440,
-0.005896238432,
0.020118256272,
0.043688068352,
0.064184426176,
0.081117852848,
0.094145082720,
0.103071662816,
0.107849524624,
0.108570384912,
0.105454849056,
0.098838279760,
0.089153475696,
0.076911286464,
0.062679528144,
0.047061257728,
0.030672862432,
0.014122828096,
-0.002008128960,
-0.017185016768,
-0.030934366880,
-0.042856663040,
-0.052636426528,
-0.060048168928,
-0.064959828560,
-0.067332183552,
-0.067215653648,
-0.064743874784,
-0.060125116448,
-0.053631054624,
-0.045584522112,
-0.036345604480,
-0.026297474784,
-0.015831847648,
-0.005335164672,
0.004824720752,
0.014310238400,
0.022824434864,
0.030119153408,
0.036001401200,
0.040337174544,
0.043053289264,
0.044136781392,
0.043632610944,
0.041638732336,
0.038300595968,
0.033803017232,
0.028362380048,
0.022216880912,
0.015617428128,
0.008818016176,
0.002066795264,
-0.004402642432,
-0.010378344832,
-0.015676722320,
-0.020147296800,
-0.023676482032,
-0.026189478384,
-0.027651185968,
-0.028065070768,
-0.027471279664,
-0.025943090768,
-0.023582870624,
-0.020516558112,
-0.016888308128,
-0.012854131840,
-0.008576149600,
-0.004215921792,
0.000070424304,
0.004138348800,
0.007858335472,
0.011120649024,
0.013837402032,
0.015944740400,
0.017403751568,
0.018200482064,
0.018344747232,
0.017868927648,
0.016825053792,
0.015282136112,
0.013322566848,
0.011038726960,
0.008528668912,
0.005892773808,
0.003229740848,
0.000633583296,
-0.001809954832,
-0.004025311568,
-0.005949685968,
-0.007533881248,
-0.008743996464,
-0.009560657344,
-0.009979979776,
-0.010011308288,
-0.009677596880,
-0.009012445360,
-0.008058781072,
-0.006867072896,
-0.005492184848,
-0.003991918928,
-0.002424748240,
-0.000847201088,
0.000687521680,
0.002131168000,
0.003441799808,
0.004585156336,
0.005534745888,
0.006272547168,
0.006788721920,
0.007081890336,
0.007157811424,
0.007029282848,
0.006714467056,
0.006236757504,
0.005622425584,
0.004900782288,
0.004101247216,
0.003254433680,
0.002388944496,
0.001531527392,
0.000707853792,
-0.000063119472,
-0.000762428896,
-0.001377066368,
-0.001898028992,
-0.002320182016,
-0.002641260272,
-0.002863394768,
-0.002991490048,
-0.003033051504,
-0.002996997568,
-0.002894192512,
-0.002736352320,
-0.002535831248,
-0.002304417440,
-0.002053472128,
-0.001793277264,
-0.001533361184,
-0.001281779408,
-0.001045305200,
-0.000828864112,
-0.000636015984,
-0.000468666800,
-0.000599909216,
0.000000000000
};
            }
        }
    }
}
